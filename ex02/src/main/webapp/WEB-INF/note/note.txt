p268 오라클 데이터베이스 페이징처리
페이징 처리 방식은 번호를 이용하거나 계속보기 형태로 구현한다.
- 1. 번호를 이용한 페이징처리
- 2. 계속보기 Ajax와 앱이 등장한 후에 무한 스크롤이나 더보기 형태로 구현

Order by
- Order by 이용해서 정렬 한다면 데이터의 양이 많을 수록 정렬 작업이 많은 리소스를 소모한다.

데이터 베이스 이용할 때 웹이나 애플리케이션에 가장 신경써야하는 두가지.
1. 빠르게 처리 되는 것
2. 필요한 양만큼만 데이터를 가져오는 것

따라서 Order by를 이용한 작업은 가능한 배제해야한다. 데이터가 많을 경우에 엄청난 성능 저하를 가져오기 때문
Order by을 사용하는 경우 두 가지
1. 데이터가 적은 경우
2. 정렬을 빠르게 할 수 있는 방법이 있는 경우
위의 두가지 경우가 아니라면 Order by는 주의해서 사용해야한다.

데이터베이스에 전달된 SQL문은 3단계를 거친다.
1. SQL 파싱
- SQL 구문에 오류가 있는지 SQL을 실행해야 하는 대상 객체(테이블), 제약조건 권한 등이 존재하는지 검사
2. SQL 최적화
- SQL이 실행된느데 필요한 비용을 계산한다. 이 계산 비용을 기준으로 실행하는 것이 가장 좋다고 판단하는 것은 실행 계획이다.
3. SQL 실행
- 세워진 실행 계획을 통해서 메몸리상에서 데이터를 읽거나 물리적인 공간에서 데이터를 로딩하는 등의 작업을 하게 된다.
TIP 실행 계왹을 보는 가장 간단한 방법 : '안쪽에서 바깥쪽으로, 위에서 아래로 ' 본다.
아래 두가지는 +1 이라는 글자가 다르지만 성능상으로는 8초 이상의 차이를 보인다.(데이터가 많아질 경우)
- select * from tbl_board order by bno+1 desc;
- select * from tbl_board order by bno desc;

여기서 중요한 것은 데이터베이스의 인덱스(INDEX) 알게 되면 이해가 된다.
인덱스란 쉽게 설명하면 데이터베이스의 테이블을 하나의 책이라 생각한다면 어떻게 데이터를 찾거나 정렬하는지를 생각하는 것이다.
색인은 사람들이 쉽게 찾아 볼 수 있게 알파벳 순서나 한글 순서로 정렬한다. 이를 통해서 위에서 또는 반대에서 찾아나가는데 이것을 스캔이라고 한다.
데이터 베이스에 테이블을 만들때에 PK를 부여하면 위와 같은 기능을 갖게 된다. 즉 고유의 식별자 키를 주는 것이다.

인덱스와 실제 테이블을 연결하는 고리는 ROWID라는 존재이다.

인덱스와 오라클 힌트

오라클은 select 문을 전달할 떄 '힌트'라는 것을 사용 할 수 있다.
힌트란? 데이터 베이스에 지금 내가 전달한 select 문을 이렇게 실행 해달라는 것
힌트 특징
- select 문을 어떻게 처리하는지에 대한 이야기 일뿐 힌트 구문에서 에러가 나도 전혀 SQL 실행에 지장을 주지 않는다.
- > 개발자는 select 문을 작성한 후에는 실행계획을 통해서 개발자가 원하는 대로 SQL이 실행 되는지를 확인하는 습관을 가져야한다.
- > 강제성을 부여 할 수 있다. 
	예를 들면 게시물 목록은 반드시 시간의 역순으로 나와야하기 때문에 order by bno desc를 사용한다.
	이때 , select /*+INDEX_DESC(tbl_board pk_board)*/* from tbl_board; 


